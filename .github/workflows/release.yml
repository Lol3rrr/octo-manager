on:
  push:
    tags:
      - 'v*'
name: Release
jobs:
  build-linux-amd64:
    name: Build linux/amd64
    runs-on: ubuntu-latest
    steps:
      - name: Install go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14
        id: go

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Build
        run: GOOS=linux GOARCH=amd64 go build -o linux_x64 .
      
      - name: Upload build
        uses: actions/upload-artifact@v1
        with:
          name: linux_x64
          path: linux_x64
  
  create-release:
    name: Create Release and upload artifacts
    runs-on: ubuntu-latest
    needs: 
      - build-linux-amd64
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v1
        with:
          name: linux_x64
          path: ./

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./linux_x64
          asset_name: linux_x64
          asset_content_type: binary